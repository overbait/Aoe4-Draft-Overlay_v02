/* src/components/studio/BoXSeriesOverviewElement.module.css */

.baseElement {
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  overflow-y: auto; /* Allow vertical scrolling */
  overflow-x: hidden; /* Prevent horizontal scrolling */
  display: flex;
  flex-direction: column;
  justify-content: flex-start; /* Stack games from the top */
  font-family: 'Arial', sans-serif; /* Default, can be overridden by element props */
  color: white;
  text-shadow: 0 0 2px black, 0 0 2px black;
  padding: 5px; /* Add some internal padding */
}

.gameEntryContainer {
  /* Margin-bottom is now controlled by inline style in the component */
  /* Add other styles if needed, e.g., width: 100%; */
}

.gameEntryContainer:last-child {
  /* This is now handled by conditional inline style to ensure 0px for the last item */
}

.selectorDisplay {
  padding: 5px; /* Matches select padding */
  border: 1px solid #c19a49; /* --aoe-gold-accent */
  border-radius: 3px;
  background-color: #4a3b2a; /* --aoe-button-bg */

  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;

  position: relative; /* For text overlay and other potential absolute elements */
  box-sizing: border-box;

  /* Default text properties for children, like the overlay */
  color: white; /* or #f0e6d2 --aoe-text-light */
  text-shadow: 0 0 3px black, 0 0 3px black;

  display: flex; /* To help center text overlay if not absolutely positioned */
  justify-content: center;
  align-items: flex-end; /* Align text to bottom by default */
}

.selectorTextOverlay {
  /* position: absolute; */ /* Let's try without absolute first, relying on flex align-items:flex-end */
  /* bottom: 0; */
  /* left: 0; */
  width: 100%;
  background-color: rgba(0, 0, 0, 0.65);
  color: white; /* Explicitly set for overlay */
  font-family: 'Cinzel', serif; /* --font-medieval */
  font-size: 1.0em; /* Relative to parent .selectorDisplay, which inherits from .baseElement's dynamicFontSize (10px unscaled) */
  padding: 1px 3px; /* Minimal padding */
  box-sizing: border-box;
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  /* border-bottom-left-radius: 2px; /* Match container if not full width overlay */
  /* border-bottom-right-radius: 2px; */
  /* If not absolutely positioned, margin might be needed if it's not at bottom */
  align-self: flex-end; /* Ensure it's at the bottom if flex container */
}

.gameTitle {
  font-family: 'Cinzel', serif;
  font-weight: bold;
  text-align: center;
  padding-top: 5px;    /* Retain some padding above title, or remove if not needed */
  margin-bottom: 8px;  /* Matches .game-slot-title margin-bottom */
  /* fontSize is applied via inline style in the component */
  /* background-color: rgba(0, 0, 0, 0.3); /* Optional: for readability */
  /* border-radius: 2px; */ /* Optional */
}

/* .imageContainer and .letterboxedImage are removed */

.gameImageRow { /* Renamed from gameRow */
  display: grid;
  /* gridTemplateColumns will be set dynamically in the component */
  align-items: center;
  text-align: center;
  width: 100%;
  /* padding: 2px 0; /* Original padding, can adjust/remove if .gameTitle padding handles it */
  min-height: 30px;
}

.civCell {
  position: relative; /* For potential future overlays or absolute positioning within cell */
}

.leftCivCell {
  justify-self: end; /* Align to the right of its grid column */
}

.rightCivCell {
  justify-self: start; /* Align to the left of its grid column */
}

.mapCell {
  justify-self: center; /* Center in its grid column */
  position: relative;
  z-index: 1; /* Map is typically in the middle, default stacking */
}

/* .civImage and .mapImage are removed or empty */
.civImage {}
.mapImage {}

.winnerGlow { /* This class will be added to the selectorDisplay */
  box-shadow: 0 0 8px 3px #00dd00, 0 0 5px 2px #00dd00 inset; /* Keep a strong glow */
  border-color: #00ff00 !important; /* Ensure winner border color overrides default */
}

.noGamesMessage {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  font-size: 12px; /* Adjust as needed */
  color: #888;
}

/* Spacers for pivot lock - their width is controlled by grid-template-columns */
.spacer {
  /* This class is mainly for semantic distinction if needed, actual spacing is by grid column width */
  /* No visual styling needed unless for debugging */
}
