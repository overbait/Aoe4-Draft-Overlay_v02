/* src/components/studio/MapPoolElement.module.css */
.mapPoolElement {
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  display: flex; /* This will place grids side-by-side before translateX */
  justify-content: center; /* Center the two grids if they don't fill the width */
  align-items: flex-start; /* Align grids to the top */
  position: relative; /* For absolute positioning of children if needed, or stacking context */
  overflow: visible; /* Ensure content is not clipped by default */
  padding: 5px; /* Optional padding for the whole element */
  background-color: transparent; /* Ensure no gray background */
}

.playerMapGrid {
  /* Each grid will take up part of the space. Flex behavior will be affected by translateX. */
  /* Consider using flex-basis or width if they are not meant to grow/shrink with the parent initially. */
  /* For now, let them be content-sized, translation will separate them. */
  display: flex;
  flex-wrap: wrap;
  /* Example: grid-template-columns: repeat(auto-fill, minmax(100px, 1fr)); /* Adjust mapItemWidth */ */
  gap: 8px;
  padding: 10px;
  transition: transform 0.2s ease-out; /* Smooth transition for lockPivotPoint movement */
  /* border: 1px dashed lightblue; /* Temporary for layout visualization */ */
}

.player1Grid {
  /* Specific styles for player 1 grid if needed */
  /* Example: margin-right: auto; /* Pushes player 2 grid away if not centered */ */
}

.player2Grid {
  /* Specific styles for player 2 grid if needed */
  /* Example: margin-left: auto; /* Pushes player 1 grid away if not centered */ */
}

.mapItemGridCell {
  /* Styles for the cell that HOLDS the visual content */
  /* Allows for additional spacing or effects around the visual content if needed */
}

.mapItemVisualContent {
  box-sizing: border-box;
  border: 1px solid #c19a49; /* --aoe-gold-accent, from BoXSeriesOverview */
  border-radius: 3px; /* from BoXSeriesOverview */
  background-color: #4a3b2a; /* --aoe-button-bg, from BoXSeriesOverview */
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  position: relative; /* For text overlay */
  color: white;
  text-shadow: 0 0 2px black, 0 0 2px black; /* from BoXSeriesOverview */
  display: flex;
  flex-direction: column;
  justify-content: flex-end; /* Align map name to the bottom */
  align-items: center; /* Center map name horizontally */
  padding: 4px; /* Reduced padding to make maps more rectangular */
  overflow: hidden; /* Clip content like map name if it's too long */

  /* Make it slightly more rectangular by adjusting height relative to a fixed width, */
  /* or by adjusting padding. Current approach is fixed width/height via inline style in TSX */
  /* and reduced vertical padding here. */
}

.mapName {
  font-family: 'Cinzel', serif; /* from BoXSeriesOverview */
  font-size: 0.9em; /* Relative to parent's dynamicFontSize */
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
  padding: 2px 0;
  /* background-color: rgba(0, 0, 0, 0.5); /* Optional for readability */ */
}

.placeholderText {
  color: #555;
  font-size: 0.8em;
  text-align: center;
  width: 100%;
  margin-bottom: 10px;
}

.noMapsMessage {
  color: #777;
  font-size: 0.9em;
  text-align: center;
  padding: 10px;
  width: 100%;
}

/* Styles for map states (picked, banned, affected, adminPicked) will be added in the next step */

.mapItemVisualContent.picked {
  border-color: #00ff00; /* Green */
  box-shadow: 0 0 8px 3px #00dd00, 0 0 5px 2px #00dd00 inset; /* Similar to winnerGlow */
}

.mapItemVisualContent.banned {
  border-color: #ff0000; /* Red */
  box-shadow: 0 0 8px 3px #dd0000, 0 0 5px 2px #dd0000 inset;
}

.mapItemVisualContent.affected {
  filter: grayscale(100%);
  border-color: #555; /* Darker border for affected maps */
}

.mapItemVisualContent.adminPicked {
  border-color: #ffd700; /* Gold */
  box-shadow: 0 0 8px 3px #ffd700, 0 0 5px 2px #ffd700 inset;
}

/* Default state is just .mapItemVisualContent without additional classes */
