/* src/components/studio/MapPoolElement.module.css */
/* src/components/studio/MapPoolElement.module.css */

/* Using values from BoXSeriesOverview or define locally if different behavior is needed */
@value pickGlowColor: #00dd00; /* Green */
@value banGlowColor: #dd0000; /* Red */
@value adminPickGlowColor: #ffd700; /* Gold */

/* Keyframes for animations (can be shared if identical, but defined here for explicitness) */
@keyframes glow-intensify-pick-map {
  from { box-shadow: none; }
  to { box-shadow: 0 0 16px 6px pickGlowColor, 0 0 8px 4px pickGlowColor inset; }
}
@keyframes glow-intensify-ban-map {
  from { box-shadow: none; }
  to { box-shadow: 0 0 16px 6px banGlowColor, 0 0 8px 4px banGlowColor inset; }
}

/* Animation classes to be applied by the hook */
.animatePickInitial {
  animation: glow-intensify-pick-map 1s ease-out forwards; /* Changed to 1s */
  /* Image opacity will be handled by inline style from the hook */
}
.animateBanInitial {
  animation: glow-intensify-ban-map 1s ease-out forwards; /* Changed to 1s */
  /* Image opacity will be handled by inline style from the hook */
}

/* Classes for the sustained glow state (target of 1s transition to 50% glow) */
.animatePickSustain {
  box-shadow: 0 0 8px 3px pickGlowColor, 0 0 5px 2px pickGlowColor inset; /* 50% glow */
  border-color: pickGlowColor;
  /* opacity: 1; /* Opacity is controlled by inline style via hook */
  transition: box-shadow 1s ease-out, border-color 1s ease-out; /* Changed to 1s */
}
.animateBanSustain {
  box-shadow: 0 0 8px 3px banGlowColor, 0 0 5px 2px banGlowColor inset; /* 50% glow */
  border-color: banGlowColor;
  /* opacity: 1; */
  transition: box-shadow 1s ease-out, border-color 1s ease-out; /* Changed to 1s */
}

/* Ensure the visual content itself can transition opacity for the image fade-in */
.mapItemVisualContent {
  box-sizing: border-box;
  border: 1px solid #c19a49;
  border-radius: 3px;
  background-color: #4a3b2a;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  position: relative;
  color: white;
  text-shadow: 0 0 2px black, 0 0 2px black;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  padding: 4px;
  overflow: hidden;
  filter: grayscale(0%); /* Base state for filter */
  /* Opacity will be set by inline style from hook, base is effectively 1 */
  transition: opacity 0.5s ease-in-out, /* Default for hook-driven fade-ins */
              box-shadow 0.3s ease-out, /* For existing glow behavior if any */
              border-color 0.3s ease-out,
              filter 2s ease-in-out; /* For affected state filter transition */
}

.mapItemVisualContent.affected {
  filter: grayscale(100%);
  /* Hook will set inline opacity to 0.9 */
  /* Override transition duration for opacity specifically for the affected state change */
  transition-property: filter, opacity;
  transition-duration: 2s, 2s;
  transition-timing-function: ease-in-out, ease-in-out;
}

.mapPoolElement {
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  position: relative;
  overflow: visible;
  padding: 5px;
  background-color: transparent;
}

.playerMapGrid {
  display: grid;
  grid-template-columns: repeat(5, 250px);
  grid-template-rows: repeat(4, auto);
  grid-auto-flow: column;
  grid-gap: 8px;
  box-sizing: border-box;
  padding: 5px; /* Overall padding for the grid itself */
  transition: transform 0.2s ease-out;
}

.player1Grid {
  /* Specific styles for player 1 grid if needed */
}

.player2Grid {
  direction: rtl;
}

.mapItemGridCell {
  padding: 0; /* grid-gap on parent now handles spacing */
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
}

.mapItemVisualContent {
  box-sizing: border-box;
  border: 1px solid #c19a49; /* --aoe-gold-accent, from BoXSeriesOverview */
  border-radius: 3px; /* from BoXSeriesOverview */
  background-color: #4a3b2a; /* --aoe-button-bg, from BoXSeriesOverview */
  background-size: cover; /* Changed from contain */
  background-position: center;
  background-repeat: no-repeat;
  position: relative; /* For text overlay */
  color: white;
  text-shadow: 0 0 2px black, 0 0 2px black; /* from BoXSeriesOverview */
  display: flex;
  flex-direction: column;
  justify-content: flex-end; /* Align map name to the bottom */
  align-items: center; /* Center map name horizontally */
  padding: 4px; /* Reduced padding to make maps more rectangular - this is for INSIDE the card */
  overflow: hidden;
  /* transition property is now at the top of this class definition for clarity */
}

.debugLastActionItem { /* For debugging disappearing items */
  outline: 3px solid limegreen !important;
  border-color: limegreen !important;
  box-shadow: 0 0 10px 5px limegreen !important; /* Make it very obvious */
}

.mapName {
  font-family: 'Cinzel', serif; /* from BoXSeriesOverview */
  font-size: 1.76em; /* Changed from 1.6em */
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
  padding: 2px 0;
}

.placeholderText {
  color: #555;
  font-size: 0.8em;
  text-align: center;
  width: 100%; /* Spans full width of flex container */
  margin-bottom: 10px;
}

.noMapsMessage {
  color: #777;
  font-size: 0.9em;
  text-align: center;
  width: 100%; /* Spans full width of flex container */
  padding: 10px; /* Padding for the message box itself */
}

.mapItemVisualContent.picked {
  border-color: #00ff00; /* Green */
  box-shadow: 0 0 8px 3px #00dd00, 0 0 5px 2px #00dd00 inset;
}

.mapItemVisualContent.banned {
  border-color: #ff0000; /* Red */
  box-shadow: 0 0 8px 3px #dd0000, 0 0 5px 2px #dd0000 inset;
}

.mapItemVisualContent.affected {
  filter: grayscale(100%);
  border-color: #555;
}

.mapItemVisualContent.adminPicked {
  border-color: #ffd700; /* Gold */
  box-shadow: 0 0 8px 3px #ffd700, 0 0 5px 2px #ffd700 inset;
}
